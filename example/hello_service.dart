import 'dart:async';
import 'dart:io';

import 'package:alfred/alfred.dart';
import 'package:pennyworth/pennyworth.dart';

// This file is generated by [Pennyworth Builder](https://github.com/d-markey/pennyworth_builder) according to annotations in source code.
// Annotations are provided by [Pennyworth](https://github.com/d-markey/pennyworth), and interpreted by Pennyworth Builder.
// Pennyworth must be installed as a regular dependency to your project, while Pennyworth Builder is just a development dependency.
// Annotations are not interpreted dynamically (at runtime). Code generation with [build_runner](https://pub.dev/packages/build_runner) is mandatory.
//
// To generate the source code from Pennyworth annotations, run:
//
//      dart run build_runner build
//
part 'hello_service.g.dart';

@RestService('/', tags: ['HELLO'])
class HelloService extends NestedOpenApi {
  HelloService();

  static bool _isBirthday(UserDto user) {
    final birthDate = user.birthDate;
    if (birthDate != null) {
      final now = DateTime.now();
      return (now.day == birthDate.day && now.month == birthDate.month);
    } else {
      return false;
    }
  }

  @RestOperation.post
  @RestOperation(uri: '/', summary: 'Says hello')
  Future<String> hello(UserDto user) async {
    return _isBirthday(user)
        ? 'Hello and Happy Birthday ${user.name}!'
        : 'Hello ${user.name}!';
  }

  @RestOperation.post
  @RestOperation(uri: '/fr', summary: 'Says hello in French')
  Future<String> bonjour(UserDto user) async {
    return _isBirthday(user)
        ? 'Bonjour et joyeux anniversaire, ${user.name} !'
        : 'Bonjour ${user.name} !';
  }

  @override
  List<OpenApiRoute> mount(
      NestedRoute parentRoute, OpenApiService openApiService) {
    // the following methods are extension methods generated by Pennyworth Builder
    openApiService.registerUserDto();
    return parentRoute.mount_HelloService(this, openApiService);
  }
}

@RestEntity(title: 'User Information')
class UserDto {
  UserDto(this.name, [this.birthDate]);

  @RestField(title: 'Name')
  final String name;

  @RestField(title: 'Date of birth')
  final DateTime? birthDate;

  // `autoDeserializeUserDto()` is generated by Pennyworth Builder as an extension method on
  // `Map<String, dynamic>` when the build option `auto_serialization` is enabled.
  factory UserDto.fromJson(Map<String, dynamic> input) =>
      input.autoDeserializeUserDto();

  // `autoSerialize()` is generated by Pennyworth Builder as an extension method on
  // `UserDto` when the build option `auto_serialization` is enabled.
  Map<String, dynamic> toJson() => autoSerialize();
}
